;;
;; Header files for lending_record
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_slice_slice
(cell, ()) __tact_dict_set_slice_slice(cell d, int kl, slice k, slice v) inline;

;; __tact_dict_get_slice_slice
slice __tact_dict_get_slice_slice(cell d, int kl, slice k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $OwnershipAssigned$_load
(slice, ((int, slice, slice))) $OwnershipAssigned$_load(slice sc_0) inline;

;; $Excesses$_load
(slice, ((int))) $Excesses$_load(slice sc_0) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, slice, slice, cell, int, slice) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, slice, slice, cell, int, slice) v) inline;

;; $Admin_Deposit$_load
(slice, ((slice))) $Admin_Deposit$_load(slice sc_0) inline;

;; $Admin_Withdraw$_load
(slice, ((slice))) $Admin_Withdraw$_load(slice sc_0) inline;

;; $lending_record$_store
builder $lending_record$_store(builder build_0, (slice, cell) v) inline;

;; $lending_record$_load
(slice, ((slice, cell))) $lending_record$_load(slice sc_0) inline;

;; $lending_record$init$_load
(slice, ((slice))) $lending_record$init$_load(slice sc_0) inline;

;; $lending_record$_contract_init
(slice, cell) $lending_record$_contract_init(slice $owner) impure inline_ref;

;; $lending_record$_contract_load
(slice, cell) $lending_record$_contract_load() impure inline_ref;

;; $lending_record$_contract_store
() $lending_record$_contract_store((slice, cell) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $lending_record$_fun_get_record
((slice, cell), cell) $lending_record$_fun_get_record((slice, cell) $self) impure inline_ref;

;; $SendParameters$_constructor_to_value_bounce_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body(slice to, int value, int bounce, int mode, cell body) inline;

;; $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload
((int, slice, slice, cell, int, slice)) $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload(int query_id, slice new_owner, slice response_destination, cell custom_payload, int forward_amount, slice forward_payload) inline;

;; $SendParameters$_constructor_value_to_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_mode(int value, slice to, int mode) inline;
